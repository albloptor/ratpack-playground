fun sequentialRun(): Promise<String> {
        var result = "a"
        return repository.find().flatMap {
            println("Flat map controller ${Thread.currentThread()}")
            result = result.plus(it)
            controller.call()
        }.flatMap {
            println("Flat map ratpack ${Thread.currentThread()}")
            result = result.plus(it)
            ratpack.call()
        }.map {
            println("Flat map e ${Thread.currentThread()}")
            result = result.plus(it).plus("e")
            result
        }
    }

class Repository {
    fun find(): Promise<String> {
        return Blocking.get {
            println("***********")
            println(Thread.currentThread())
            Thread.sleep(1000L)
        }.map {
            "b"
        }
    }
}

class Controller {
    fun call(): Promise<String> {
        return Blocking.get {
            println(Thread.currentThread())
            Thread.sleep(1000L)
        }.map { "c" }
    }
}